# Generated by Django 5.2.6 on 2025-09-09 14:03

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MaterialModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('zirconia', 'Zirconia'), ('metal', 'Non-Precious Metal'), ('hybrid', 'Hybrid Ceramic'), ('resin', 'Resin')], default='zirconia', max_length=20, verbose_name='Material Type')),
                ('name', models.CharField(max_length=100, verbose_name='Material Name')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Material Code')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Material',
                'verbose_name_plural': 'Materials',
            },
        ),
        migrations.CreateModel(
            name='OptionGroupModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Group Name')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Option Group',
                'verbose_name_plural': 'Option Groups',
            },
        ),
        migrations.CreateModel(
            name='ServiceCategoryModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Category Name')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='images/catalog/icon/', verbose_name='Icon')),
                ('ui_color', models.CharField(blank=True, max_length=12, verbose_name='UI Color')),
            ],
            options={
                'verbose_name': 'Service Category',
                'verbose_name_plural': 'Service Categories',
            },
        ),
        migrations.CreateModel(
            name='OptionModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('label', models.CharField(max_length=100, verbose_name='Label')),
                ('input_type', models.CharField(choices=[('bool', 'Yes / No'), ('int', 'Integer'), ('float', 'Decimal'), ('choice', 'Single Choice'), ('multichoice', 'Multiple Choice'), ('text', 'Text Input')], default='choice', max_length=20, verbose_name='Input Type')),
                ('level', models.CharField(choices=[('base', 'Base Form'), ('detail', 'Detail Options'), ('extended', 'Extended Layer')], default='base', max_length=20, verbose_name='Option Level')),
                ('required', models.BooleanField(default=False, verbose_name='Required')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='catalog.optiongroupmodel', verbose_name='Option Group')),
            ],
            options={
                'verbose_name': 'Option',
                'verbose_name_plural': 'Options',
            },
        ),
        migrations.CreateModel(
            name='ServiceModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120, verbose_name='Service Name')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Service Code')),
                ('pricing_type', models.CharField(choices=[('fixed', 'Fixed Price'), ('custom', 'Custom Price')], default='fixed', max_length=20, verbose_name='Pricing Type')),
                ('fixed_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Fixed Price')),
                ('form_type', models.CharField(choices=[('simple', 'Simple Form'), ('advanced', 'Advanced Form')], default='simple', max_length=20, verbose_name='Form Type')),
                ('is_per_tooth', models.BooleanField(default=True, verbose_name='Per Tooth')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='services', to='catalog.servicecategorymodel', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
            },
        ),
        migrations.CreateModel(
            name='ServiceMaterialModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_default', models.BooleanField(default=False, help_text='Used as default material in forms', verbose_name='Default Material')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='catalog.materialmodel', verbose_name='Material')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='catalog.servicemodel', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'Service Material Compatibility',
                'verbose_name_plural': 'Service Material Compatibilities',
                'unique_together': {('service', 'material')},
            },
        ),
    ]
